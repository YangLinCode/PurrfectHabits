Index: src/main/ui/HabitsApp.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ui;\r\n\r\nimport javafx.event.ActionEvent;\r\nimport javafx.event.EventHandler;\r\nimport javafx.scene.control.CheckBox;\r\nimport javafx.scene.control.TextField;\r\nimport javafx.scene.image.Image;\r\nimport javafx.stage.Stage;\r\nimport model.Dashboard;\r\nimport persistence.JsonReader;\r\nimport persistence.JsonWriter;\r\nimport ui.controller.*;\r\n\r\nimport java.io.FileInputStream;\r\nimport java.io.FileNotFoundException;\r\n\r\npublic class HabitsApp implements EventHandler<ActionEvent> {\r\n    private static final String habitsFolderDirectory = \"./data/habits\";\r\n    private static final String isInitialDirectory = \"./data/misc/launch.json\";\r\n    private static final String signInDirectory = \"./data/misc/signIn.json\";\r\n    private static final String accountDirectory = \"./data/misc/account.json\";\r\n    private Dashboard dashboard;\r\n    private JsonReader jsonReader;\r\n    private JsonReader isInitialReader;\r\n    private JsonReader rememberMeReader;\r\n    private JsonReader accountReader;\r\n    private JsonWriter jsonWriter;\r\n    private JsonWriter isInitialWriter;\r\n    private JsonWriter rememberMeWriter;\r\n    private JsonWriter accountWriter;\r\n    private WelcomePage welcomePage;\r\n    private LoginPage loginPage;\r\n    private DashboardPage dashboardPage;\r\n    private AboutUsPage aboutUsPage;\r\n    private CreateAccountPage createAccountPage;\r\n    private AddHabitPage addHabitPage;\r\n    private RemoveHabitPage removeHabitPage;\r\n    private GalleryPage galleryPage;\r\n    private Stage primaryStage;\r\n\r\n    public HabitsApp(Stage primaryStage) {\r\n        this.primaryStage = primaryStage;\r\n        try {\r\n            FileInputStream inputStream = new FileInputStream(\"data/misc/anonCat.png\");\r\n            Image icon = new Image(inputStream);\r\n            primaryStage.getIcons().add(icon);\r\n            primaryStage.setTitle(\"PurrfectHabits\");\r\n        } catch (FileNotFoundException e) {\r\n            e.printStackTrace();\r\n        }\r\n        dashboard = new Dashboard();\r\n        jsonReader = new JsonReader(habitsFolderDirectory);\r\n        jsonWriter = new JsonWriter(habitsFolderDirectory);\r\n        isInitialReader = new JsonReader(isInitialDirectory);\r\n        rememberMeReader = new JsonReader(signInDirectory);\r\n        if (isInitialReader.readIsInitial()) {\r\n            try {\r\n                welcomePage = new WelcomePage(primaryStage, this);\r\n                isInitialWriter = new JsonWriter(isInitialDirectory);\r\n                isInitialWriter.setIsInitialLaunchFalse();\r\n            } catch (FileNotFoundException e) {\r\n                e.printStackTrace();\r\n            }\r\n        } else {\r\n            if (!rememberMeReader.readShouldRemember()) {\r\n                try {\r\n                    loginPage = new LoginPage(primaryStage, this);\r\n                } catch (Exception e) {\r\n                    e.printStackTrace();\r\n                }\r\n            } else {\r\n                try {\r\n                    dashboardPage = new DashboardPage(primaryStage, this, dashboard);\r\n                } catch (Exception e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void handle(ActionEvent event) {\r\n        welcomePageListener(event);\r\n        aboutUsPageListener(event);\r\n        createAccountPageListener(event);\r\n        loginPageListener(event);\r\n        dashboardPageListener(event);\r\n        addPageListener(event);\r\n        removePageListener(event);\r\n        galleryPageListener(event);\r\n    }\r\n\r\n    private void welcomePageListener(ActionEvent event) {\r\n        if (welcomePage != null && event.getSource() == welcomePage.getGetStartedButton()) {\r\n            try {\r\n                aboutUsPage = new AboutUsPage(primaryStage, this);\r\n            } catch (FileNotFoundException e) {\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n    }\r\n\r\n    private void aboutUsPageListener(ActionEvent event) {\r\n        if (aboutUsPage != null && event.getSource() == aboutUsPage.getContinueButton()) {\r\n            try {\r\n                createAccountPage = new CreateAccountPage(primaryStage, this);\r\n            } catch (FileNotFoundException e) {\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n    }\r\n\r\n    private void createAccountPageListener(ActionEvent event) {\r\n        if (createAccountPage != null && event.getSource() == createAccountPage.getCreateButton()) {\r\n            TextField name = createAccountPage.getNameField();\r\n            TextField email = createAccountPage.getEmailField();\r\n            TextField password = createAccountPage.getPasswordField();\r\n            TextField confirmPassword = createAccountPage.getConfirmPasswordField();\r\n\r\n            if (!password.getText().equals(confirmPassword.getText())) {\r\n                AlertBox.display(\"PurrfectHabits\", \"Passwords do not match.\");\r\n            } else if (!password.getText().equals(\"\")) {\r\n                accountWriter = new JsonWriter(accountDirectory);\r\n                accountWriter.saveAccountDetails(name.getText(), email.getText(), password.getText());\r\n                AlertBox.display(\"PurrfectHabits\", \"Account was successfully created. Please log in.\");\r\n                try {\r\n                    loginPage = new LoginPage(primaryStage, this);\r\n                } catch (Exception e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private void loginPageListener(ActionEvent event) {\r\n        if (loginPage != null && event.getSource() == loginPage.getSignInButton()) {\r\n            CheckBox rememberMe = loginPage.getRememberMe();\r\n            TextField email = loginPage.getEmail();\r\n            TextField password = loginPage.getPassword();\r\n\r\n            accountReader = new JsonReader(accountDirectory);\r\n            if (email.getText().equals(accountReader.readEmail()) && password.getText().equals(accountReader.readPassword())) {\r\n                if (rememberMe.isSelected()) {\r\n                    rememberMeWriter = new JsonWriter(signInDirectory);\r\n                    rememberMeWriter.setRememberMeTrue();\r\n                }\r\n\r\n                try {\r\n                    dashboardPage = new DashboardPage(primaryStage, this, dashboard);\r\n                } catch (Exception e) {\r\n                    e.printStackTrace();\r\n                }\r\n            } else {\r\n                AlertBox.display(\"PurrfectHabits\", \"Email or password is incorrect.\");\r\n            }\r\n        }\r\n    }\r\n\r\n    private void dashboardPageListener(ActionEvent event) {\r\n        if (dashboardPage != null && event.getSource() == dashboardPage.getAddHabitButton()) {\r\n            addHabitPage = new AddHabitPage(this);\r\n        } else if (dashboardPage != null && event.getSource() == dashboardPage.getRemoveHabitButton()) {\r\n            removeHabitPage = new RemoveHabitPage(this);\r\n        }\r\n    }\r\n\r\n    private void addPageListener(ActionEvent event) {\r\n\r\n    }\r\n\r\n    private void removePageListener(ActionEvent event) {\r\n\r\n    }\r\n\r\n    private void galleryPageListener(ActionEvent event) {\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/ui/HabitsApp.java b/src/main/ui/HabitsApp.java
--- a/src/main/ui/HabitsApp.java	
+++ b/src/main/ui/HabitsApp.java	
@@ -87,7 +87,6 @@
         dashboardPageListener(event);
         addPageListener(event);
         removePageListener(event);
-        galleryPageListener(event);
     }
 
     private void welcomePageListener(ActionEvent event) {
@@ -170,9 +169,5 @@
 
     private void removePageListener(ActionEvent event) {
 
-    }
-
-    private void galleryPageListener(ActionEvent event) {
-
     }
 }
